/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SignupIndexImport } from './routes/signup/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as CheckEmailIndexImport } from './routes/check-email/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as ImageTinyLmgIndexImport } from './routes/image/tiny-lmg/index'
import { Route as ImageGeneratorIndexImport } from './routes/image/generator/index'
import { Route as ImageFormatterIndexImport } from './routes/image/formatter/index'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignupIndexRoute = SignupIndexImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const CheckEmailIndexRoute = CheckEmailIndexImport.update({
  id: '/check-email/',
  path: '/check-email/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const ImageTinyLmgIndexRoute = ImageTinyLmgIndexImport.update({
  id: '/image/tiny-lmg/',
  path: '/image/tiny-lmg/',
  getParentRoute: () => rootRoute,
} as any)

const ImageGeneratorIndexRoute = ImageGeneratorIndexImport.update({
  id: '/image/generator/',
  path: '/image/generator/',
  getParentRoute: () => rootRoute,
} as any)

const ImageFormatterIndexRoute = ImageFormatterIndexImport.update({
  id: '/image/formatter/',
  path: '/image/formatter/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/check-email/': {
      id: '/check-email/'
      path: '/check-email'
      fullPath: '/check-email'
      preLoaderRoute: typeof CheckEmailIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/image/formatter/': {
      id: '/image/formatter/'
      path: '/image/formatter'
      fullPath: '/image/formatter'
      preLoaderRoute: typeof ImageFormatterIndexImport
      parentRoute: typeof rootRoute
    }
    '/image/generator/': {
      id: '/image/generator/'
      path: '/image/generator'
      fullPath: '/image/generator'
      preLoaderRoute: typeof ImageGeneratorIndexImport
      parentRoute: typeof rootRoute
    }
    '/image/tiny-lmg/': {
      id: '/image/tiny-lmg/'
      path: '/image/tiny-lmg'
      fullPath: '/image/tiny-lmg'
      preLoaderRoute: typeof ImageTinyLmgIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/admin': typeof AdminIndexRoute
  '/check-email': typeof CheckEmailIndexRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/image/formatter': typeof ImageFormatterIndexRoute
  '/image/generator': typeof ImageGeneratorIndexRoute
  '/image/tiny-lmg': typeof ImageTinyLmgIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/admin': typeof AdminIndexRoute
  '/check-email': typeof CheckEmailIndexRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/image/formatter': typeof ImageFormatterIndexRoute
  '/image/generator': typeof ImageGeneratorIndexRoute
  '/image/tiny-lmg': typeof ImageTinyLmgIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/account/': typeof AccountIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/check-email/': typeof CheckEmailIndexRoute
  '/login/': typeof LoginIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/image/formatter/': typeof ImageFormatterIndexRoute
  '/image/generator/': typeof ImageGeneratorIndexRoute
  '/image/tiny-lmg/': typeof ImageTinyLmgIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/admin'
    | '/check-email'
    | '/login'
    | '/signup'
    | '/admin/users'
    | '/image/formatter'
    | '/image/generator'
    | '/image/tiny-lmg'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/admin'
    | '/check-email'
    | '/login'
    | '/signup'
    | '/admin/users'
    | '/image/formatter'
    | '/image/generator'
    | '/image/tiny-lmg'
  id:
    | '__root__'
    | '/'
    | '/account/'
    | '/admin/'
    | '/check-email/'
    | '/login/'
    | '/signup/'
    | '/admin/users/'
    | '/image/formatter/'
    | '/image/generator/'
    | '/image/tiny-lmg/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountIndexRoute: typeof AccountIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  CheckEmailIndexRoute: typeof CheckEmailIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  ImageFormatterIndexRoute: typeof ImageFormatterIndexRoute
  ImageGeneratorIndexRoute: typeof ImageGeneratorIndexRoute
  ImageTinyLmgIndexRoute: typeof ImageTinyLmgIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountIndexRoute: AccountIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  CheckEmailIndexRoute: CheckEmailIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  ImageFormatterIndexRoute: ImageFormatterIndexRoute,
  ImageGeneratorIndexRoute: ImageGeneratorIndexRoute,
  ImageTinyLmgIndexRoute: ImageTinyLmgIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account/",
        "/admin/",
        "/check-email/",
        "/login/",
        "/signup/",
        "/admin/users/",
        "/image/formatter/",
        "/image/generator/",
        "/image/tiny-lmg/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account/": {
      "filePath": "account/index.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/check-email/": {
      "filePath": "check-email/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    },
    "/image/formatter/": {
      "filePath": "image/formatter/index.tsx"
    },
    "/image/generator/": {
      "filePath": "image/generator/index.tsx"
    },
    "/image/tiny-lmg/": {
      "filePath": "image/tiny-lmg/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
